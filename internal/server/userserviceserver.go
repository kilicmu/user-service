// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package server

import (
	"context"

	"github.com/kilicmu/user-service/github.com/kilicmu/user-service"
	"github.com/kilicmu/user-service/internal/logic"
	"github.com/kilicmu/user-service/internal/svc"
)

type UserServiceServer struct {
	svcCtx *svc.ServiceContext
	user_service.UnimplementedUserServiceServer
}

func NewUserServiceServer(svcCtx *svc.ServiceContext) *UserServiceServer {
	return &UserServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *UserServiceServer) Login(ctx context.Context, in *user_service.LoginReq) (*user_service.AccessTokenPair, error) {
	l := logic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

func (s *UserServiceServer) RegisterUser(ctx context.Context, in *user_service.RegisterUserReq) (*user_service.UserInfoDTO, error) {
	l := logic.NewRegisterUserLogic(ctx, s.svcCtx)
	return l.RegisterUser(in)
}

func (s *UserServiceServer) GetUserInfo(ctx context.Context, in *user_service.UserInfoReq) (*user_service.UserInfoDTO, error) {
	l := logic.NewGetUserInfoLogic(ctx, s.svcCtx)
	return l.GetUserInfo(in)
}

func (s *UserServiceServer) UpdateUserInfo(ctx context.Context, in *user_service.UpdatableUserInfo) (*user_service.UserInfoDTO, error) {
	l := logic.NewUpdateUserInfoLogic(ctx, s.svcCtx)
	return l.UpdateUserInfo(in)
}

func (s *UserServiceServer) GoogleOAuthGetAccessToken(ctx context.Context, in *user_service.GoogleOAuthGetAccessTokenReq) (*user_service.GoogleOAuthGetAccessResp, error) {
	l := logic.NewGoogleOAuthGetAccessTokenLogic(ctx, s.svcCtx)
	return l.GoogleOAuthGetAccessToken(in)
}

func (s *UserServiceServer) VarifyToken(ctx context.Context, in *user_service.VarifyTokenReq) (*user_service.VarifyTokenResp, error) {
	l := logic.NewVarifyTokenLogic(ctx, s.svcCtx)
	return l.VarifyToken(in)
}

func (s *UserServiceServer) RefreshToken(ctx context.Context, in *user_service.RefreshTokenReq) (*user_service.GoogleOAuthGetAccessResp, error) {
	l := logic.NewRefreshTokenLogic(ctx, s.svcCtx)
	return l.RefreshToken(in)
}
