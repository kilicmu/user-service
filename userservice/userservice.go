// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package userservice

import (
	"context"

	"github.com/kilicmu/user-service/github.com/kilicmu/user-service"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AccessTokenPair              = user_service.AccessTokenPair
	GoogleOAuthGetAccessResp     = user_service.GoogleOAuthGetAccessResp
	GoogleOAuthGetAccessTokenReq = user_service.GoogleOAuthGetAccessTokenReq
	LoginReq                     = user_service.LoginReq
	RefreshTokenReq              = user_service.RefreshTokenReq
	RegisterUserReq              = user_service.RegisterUserReq
	ResultDTO                    = user_service.ResultDTO
	UpdatableUserInfo            = user_service.UpdatableUserInfo
	UserInfoDTO                  = user_service.UserInfoDTO
	UserInfoReq                  = user_service.UserInfoReq
	VarifyTokenReq               = user_service.VarifyTokenReq
	VarifyTokenResp              = user_service.VarifyTokenResp

	UserService interface {
		Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*AccessTokenPair, error)
		RegisterUser(ctx context.Context, in *RegisterUserReq, opts ...grpc.CallOption) (*UserInfoDTO, error)
		GetUserInfo(ctx context.Context, in *UserInfoReq, opts ...grpc.CallOption) (*UserInfoDTO, error)
		UpdateUserInfo(ctx context.Context, in *UpdatableUserInfo, opts ...grpc.CallOption) (*UserInfoDTO, error)
		GoogleOAuthGetAccessToken(ctx context.Context, in *GoogleOAuthGetAccessTokenReq, opts ...grpc.CallOption) (*GoogleOAuthGetAccessResp, error)
		VarifyToken(ctx context.Context, in *VarifyTokenReq, opts ...grpc.CallOption) (*VarifyTokenResp, error)
		RefreshToken(ctx context.Context, in *RefreshTokenReq, opts ...grpc.CallOption) (*GoogleOAuthGetAccessResp, error)
	}

	defaultUserService struct {
		cli zrpc.Client
	}
)

func NewUserService(cli zrpc.Client) UserService {
	return &defaultUserService{
		cli: cli,
	}
}

func (m *defaultUserService) Login(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*AccessTokenPair, error) {
	client := user_service.NewUserServiceClient(m.cli.Conn())
	return client.Login(ctx, in, opts...)
}

func (m *defaultUserService) RegisterUser(ctx context.Context, in *RegisterUserReq, opts ...grpc.CallOption) (*UserInfoDTO, error) {
	client := user_service.NewUserServiceClient(m.cli.Conn())
	return client.RegisterUser(ctx, in, opts...)
}

func (m *defaultUserService) GetUserInfo(ctx context.Context, in *UserInfoReq, opts ...grpc.CallOption) (*UserInfoDTO, error) {
	client := user_service.NewUserServiceClient(m.cli.Conn())
	return client.GetUserInfo(ctx, in, opts...)
}

func (m *defaultUserService) UpdateUserInfo(ctx context.Context, in *UpdatableUserInfo, opts ...grpc.CallOption) (*UserInfoDTO, error) {
	client := user_service.NewUserServiceClient(m.cli.Conn())
	return client.UpdateUserInfo(ctx, in, opts...)
}

func (m *defaultUserService) GoogleOAuthGetAccessToken(ctx context.Context, in *GoogleOAuthGetAccessTokenReq, opts ...grpc.CallOption) (*GoogleOAuthGetAccessResp, error) {
	client := user_service.NewUserServiceClient(m.cli.Conn())
	return client.GoogleOAuthGetAccessToken(ctx, in, opts...)
}

func (m *defaultUserService) VarifyToken(ctx context.Context, in *VarifyTokenReq, opts ...grpc.CallOption) (*VarifyTokenResp, error) {
	client := user_service.NewUserServiceClient(m.cli.Conn())
	return client.VarifyToken(ctx, in, opts...)
}

func (m *defaultUserService) RefreshToken(ctx context.Context, in *RefreshTokenReq, opts ...grpc.CallOption) (*GoogleOAuthGetAccessResp, error) {
	client := user_service.NewUserServiceClient(m.cli.Conn())
	return client.RefreshToken(ctx, in, opts...)
}
